{
  "version": 3,
  "sources": ["../../primevue/tristatecheckbox/tristatecheckbox.esm.js"],
  "sourcesContent": ["import { openBlock, createElementBlock, normalizeClass, createElementVNode, mergeProps, toDisplayString } from 'vue';\r\n\r\nvar script = {\r\n    name: 'TriStateCheckbox',\r\n    emits: ['click', 'update:modelValue', 'change', 'keydown', 'focus', 'blur'],\r\n    props: {\r\n        modelValue: null,\r\n        inputId: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        inputProps: {\r\n            type: null,\r\n            default: null\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        tabindex: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        'aria-labelledby': {\r\n            type: String,\r\n            default: null\r\n        },\r\n        'aria-label': {\r\n            type: String,\r\n            default: null\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            focused: false\r\n        };\r\n    },\r\n    methods: {\r\n        updateModel() {\r\n            if (!this.disabled) {\r\n                let newValue;\r\n\r\n                switch (this.modelValue) {\r\n                    case true:\r\n                        newValue = false;\r\n                        break;\r\n\r\n                    case false:\r\n                        newValue = null;\r\n                        break;\r\n\r\n                    case null:\r\n                        newValue = true;\r\n                        break;\r\n                }\r\n\r\n                this.$emit('update:modelValue', newValue);\r\n            }\r\n        },\r\n        onClick(event) {\r\n            this.updateModel();\r\n            this.$emit('click', event);\r\n            this.$emit('change', event);\r\n            this.$refs.input.focus();\r\n        },\r\n        onKeyDown(event) {\r\n            if (event.code === 'Enter') {\r\n                this.updateModel();\r\n                this.$emit('keydown', event);\r\n                event.preventDefault();\r\n            }\r\n        },\r\n        onFocus(event) {\r\n            this.focused = true;\r\n            this.$emit('focus', event);\r\n        },\r\n        onBlur(event) {\r\n            this.focused = false;\r\n            this.$emit('blur', event);\r\n        }\r\n    },\r\n    computed: {\r\n        icon() {\r\n            let icon;\r\n\r\n            switch (this.modelValue) {\r\n                case true:\r\n                    icon = 'pi pi-check';\r\n                    break;\r\n\r\n                case false:\r\n                    icon = 'pi pi-times';\r\n                    break;\r\n\r\n                case null:\r\n                    icon = null;\r\n                    break;\r\n            }\r\n\r\n            return icon;\r\n        },\r\n        containerClass() {\r\n            return [\r\n                'p-checkbox p-component',\r\n                {\r\n                    'p-checkbox-checked': this.modelValue === true,\r\n                    'p-checkbox-disabled': this.disabled,\r\n                    'p-checkbox-focused': this.focused\r\n                }\r\n            ];\r\n        },\r\n        ariaValueLabel() {\r\n            return this.modelValue ? this.$primevue.config.locale.aria.trueLabel : this.modelValue === false ? this.$primevue.config.locale.aria.falseLabel : this.$primevue.config.locale.aria.nullLabel;\r\n        }\r\n    }\r\n};\r\n\r\nconst _hoisted_1 = { class: \"p-hidden-accessible\" };\r\nconst _hoisted_2 = [\"id\", \"checked\", \"tabindex\", \"disabled\", \"aria-labelledby\", \"aria-label\"];\r\nconst _hoisted_3 = {\r\n  class: \"p-sr-only\",\r\n  \"aria-live\": \"polite\"\r\n};\r\n\r\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\r\n  return (openBlock(), createElementBlock(\"div\", {\r\n    class: normalizeClass($options.containerClass),\r\n    onClick: _cache[3] || (_cache[3] = $event => ($options.onClick($event)))\r\n  }, [\r\n    createElementVNode(\"div\", _hoisted_1, [\r\n      createElementVNode(\"input\", mergeProps({\r\n        ref: \"input\",\r\n        id: $props.inputId,\r\n        type: \"checkbox\",\r\n        checked: $props.modelValue === true,\r\n        tabindex: $props.tabindex,\r\n        disabled: $props.disabled,\r\n        \"aria-labelledby\": _ctx.ariaLabelledby,\r\n        \"aria-label\": _ctx.ariaLabel,\r\n        onKeydown: _cache[0] || (_cache[0] = $event => ($options.onKeyDown($event))),\r\n        onFocus: _cache[1] || (_cache[1] = $event => ($options.onFocus($event))),\r\n        onBlur: _cache[2] || (_cache[2] = $event => ($options.onBlur($event)))\r\n      }, $props.inputProps), null, 16, _hoisted_2)\r\n    ]),\r\n    createElementVNode(\"span\", _hoisted_3, toDisplayString($options.ariaValueLabel), 1),\r\n    createElementVNode(\"div\", {\r\n      ref: \"box\",\r\n      class: normalizeClass(['p-checkbox-box', { 'p-highlight': $props.modelValue != null, 'p-disabled': $props.disabled, 'p-focus': $data.focused }])\r\n    }, [\r\n      createElementVNode(\"span\", {\r\n        class: normalizeClass(['p-checkbox-icon', $options.icon])\r\n      }, null, 2)\r\n    ], 2)\r\n  ], 2))\r\n}\r\n\r\nscript.render = render;\r\n\r\nexport { script as default };\r\n"],
  "mappings": "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",
  "names": []
}
